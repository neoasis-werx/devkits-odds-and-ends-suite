-- SOURCE: InfoSchemaTableConstraints
-- CLASS: InfoSchemaTableConstraint
-- PARAMETER: 
DECLARE @QualifiedTableName NVARCHAR(517);
-- PARAMETER: 
DECLARE @SCHEMA_NAME sysname;

SET @QualifiedTableName = REPLACE(REPLACE(@QualifiedTableName, '[', ''), ']', '');
DECLARE @TABLE_SCHEMA sysname = ISNULL(PARSENAME(@QualifiedTableName, 2), @SCHEMA_NAME);
DECLARE @TABLE_NAME sysname = IIF(@QualifiedTableName IS NOT NULL, PARSENAME(@QualifiedTableName, 1), NULL);

SELECT
    ci.TABLE_CATALOG
  , tc.CONSTRAINT_NAME
  , ci.TABLE_SCHEMA
  , ci.TABLE_NAME
  , ci.COLUMN_NAME
  , ci.ORDINAL_POSITION
  , tc.CONSTRAINT_TYPE
  , QUALIFIED_TABLE_NAME = CONCAT_WS('.', ci.TABLE_SCHEMA, ci.TABLE_NAME)
  , QUOTED_TABLE_SCHEMA = QUOTENAME(ci.TABLE_SCHEMA)
  , QUOTED_TABLE_NAME = QUOTENAME(ci.TABLE_NAME)
  , QUOTED_COLUMN_NAME = QUOTENAME(ci.COLUMN_NAME)
  , QUOTED_QUALIFIED_TABLE_NAME = CONCAT_WS('.', QUOTENAME(ci.TABLE_SCHEMA), QUOTENAME(ci.TABLE_NAME))
  , QUOTED_QUALIFIED_TABLE_COLUMN_NAME = CONCAT_WS('.', QUOTENAME(ci.TABLE_SCHEMA), QUOTENAME(ci.TABLE_NAME), QUOTENAME(ci.COLUMN_NAME))
  , QUOTED_QUALIFIED_CONSTRAINT_NAME = CONCAT_WS('.', QUOTENAME(tc.CONSTRAINT_SCHEMA), QUOTENAME(tc.CONSTRAINT_NAME))
  , QUOTED_QUALIFIED_CONSTRAINT_COLUMN_NAME = CONCAT_WS('.', QUOTENAME(tc.CONSTRAINT_SCHEMA), QUOTENAME(tc.CONSTRAINT_NAME), QUOTENAME(ci.COLUMN_NAME))
FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS ci
    JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc
      ON tc.CONSTRAINT_SCHEMA = ci.CONSTRAINT_SCHEMA
         AND tc.CONSTRAINT_NAME = ci.CONSTRAINT_NAME
WHERE ci.TABLE_SCHEMA = ISNULL(@TABLE_SCHEMA, ci.TABLE_SCHEMA)
      AND ci.TABLE_NAME = ISNULL(@TABLE_NAME, ci.TABLE_NAME)
ORDER BY
    ci.TABLE_CATALOG
  , ci.TABLE_SCHEMA
  , ci.TABLE_NAME
  , tc.CONSTRAINT_TYPE
  , ci.ORDINAL_POSITION;